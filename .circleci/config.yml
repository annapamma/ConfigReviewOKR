jobs:
  build:
    docker:
      - image: 'cimg/python:3.6'
    steps:
      - checkout
      - run: mkdir bucket && echo "lorem ipsum" > bucket/build_asset.txt
      - aws-s3/sync:
          arguments: |
            --acl public-read \
            --cache-control "max-age=86400"
          aws-access-key-id: ''
          aws-region: ''
          aws-secret-access-key: ''
          from: bucket
          overwrite: true
          to: 's3://my-s3-bucket-name/prefix'
      - aws-s3/copy:
          arguments: '--dry-run'
          from: bucket/build_asset.txt
          to: 's3://my-s3-bucket-name'
orbs:
  aws-s3: circleci/aws-s3@1.0.15
version: 2.1
#version: 2.1
#
#jobs:
#  build:
#    docker:
#      - image: circleci/node:9.9.0
#    steps:
#      - checkout
#      - run: sudo apt-get update && sudo apt-get install mysql-server
#      - restore_cache:
#          keys:
#            - v1-npm-deps-{{ checksum "package-lock.json" }}
#      - run: npm install
#      - save_cache:
#          key: v1-npm-deps-{{ checksum "package-lock.json" }}
#          paths:
#            - node_modules
#      - persist_to_workspace:
#          root: .
#          paths:
#            - '*'
#  test:
#    docker:
#      - image: circleci/node:9.9.0
#    parallelism: 10
#    steps:
#      - attach_workspace:
#          at: .
#      - run: sudo apt-get update && sudo apt-get install mysql-server
#      - restore_cache:
#          keys:
#            - v1-npm-deps-{{ checksum "package-lock.json" }}
#      - run: node --version
#
#  deploy:
#    docker:
#      - image: circleci/node:9.9.0
#    steps:
#      - attach_workspace:
#          at: .
#      - run: echo "i am pretending to deploy to AWS with this key ca43d422-85eb-42d9-8761-e3229ce9b4db"
#      - run: |
#          aws deploy push --application-name HelloWorld_App --s3-location s3://S3Location/HelloWorld_App.zip
#
#
#workflows:
#  build-test-deploy:
#    jobs:
#      - build
#      - test:
#          requires:
#            - build
#      - deploy:
#          requires:
#            - test
