version: 2.1

jobs:
  test:
    docker:
      - image: circleci/node:9.9.0 # use nextgen image for latest version of Node
    parallelism: 10 # assess whether this is worth it
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }} # use a fallback key
      - run: npm install
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: CI=true npm run test
      # configure test splitting properly

  build:
    docker:
      - image: circleci/node:9.9.0
      # look into reusable executors
    resource_class: xlarge # use more appropriate resource class
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}
      - run: npm install
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - run: npm run build
      - run: mkdir tmp && zip -r tmp/build.zip build
      - persist_to_workspace:
          root: .
          paths:
            - 'tmp'
    # persist just the build directory, ideally compressed

  deploy: # use aws-s3 orb
    docker:
      - image: circleci/node:9.9.0
    steps:
        - checkout
        - attach_workspace:
            at: 'tmp'
        - run:
            name: Install AWS CLI
            command: |
                if which aws > /dev/null; then
                  echo "The AWS CLI is already installed. Skipping."
                  exit 0
                fi
                cd
                curl "https://s3.amazonaws.com/aws-cli/awscli-bundle.zip" -o "awscli-bundle.zip"
                unzip awscli-bundle.zip
                if which sudo > /dev/null; then
                  sudo ~/awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws
                else
                  awscli-bundle/install -b ~/bin/aws
                fi
                rm -rf awscli-bundle*
        - run: # use SECRETS -- contexts
            name: Configure AWS Access Key ID
            command: |
              aws configure set aws_access_key_id K4GMW195WJKGCWVLGPZG --profile default
        - run: # use SECRETS -- contexts
            name: Configure AWS Secret Access Key
            command: |
              aws configure set aws_secret_access_key ka1rt3Rff8beXPTEmvVF4j4DZX3gbi6Y521W1oAt --profile default
        - run:
            name: Configure AWS default region
            command: |
              aws configure set region us-east-1 --profile default
        - deploy:
            name: S3 Sync
            command: |+
              aws s3 sync \
                build s3://my-s3-bucket-name/my-application --delete \
                --acl public-read \
              --cache-control "max-age=86400"

workflows:
  test-build-deploy:
    jobs:
      - test
      - build:
          requires:
            - test
      - deploy:
          requires:
            - build
